names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
g <- data[[2]]
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
g
names(data)
data
head(outlook[[1]]$posturl)
head(output[[1]]$posturl)
head(data[[1]]$posturl)
head(data[[1]])
head(data[[1]]$postUrl)
head(data[[1]]$link)
unique(data[[1]]$link)
nrow(data[[1]])
names(data)
names(data[[1]])
head(unique(data[[1]]$eexpanded))
head(unique(data[[1]]$expanded))
url_shared <- unique(data[[1]]$expanded
)
url_shared[1]
outlook[[1]][expanded == url_shared[1]]
data[[1]][expanded == url_shared[1]]
data[[1]][data$expanded == url_shared[1]]
data[[1]][data$expanded == url_shared[1],]
url_shared[1]
head(data[[1]]$expanded)
data[[1]][data$expanded == "https://www.ilfaroonline.it/2020/04/01/federscherma-in-prima-linea-contro-il-covid-19-medici-federali-in-campo-nella-task-force/329788/?utm_source=dlvr.it&utm_medium=facebook"],]
data[[1]][data$expanded == "https://www.ilfaroonline.it/2020/04/01/federscherma-in-prima-linea-contro-il-covid-19-medici-federali-in-campo-nella-task-force/329788/?utm_source=dlvr.it&utm_medium=facebook"]
data[[1]][data$expanded == "https://www.ilfaroonline.it/2020/04/01/federscherma-in-prima-linea-contro-il-covid-19-medici-federali-in-campo-nella-task-force/329788/?utm_source=dlvr.it&utm_medium=facebook",]
head(data[[1]])
head(data[[1]])$caption
data[[1]][data$caption == "ilfaroonline.it"]
data[[1]][data$caption == "ilfaroonline.it",]
details <- data[[1]]
details[details$caption == "ilfaroonline.it",]
data[[1]][data[[1]]]$expanded == "https://www.ilfaroonline.it/2020/04/01/federscherma-in-prima-linea-contro-il-covid-19-medici-federali-in-campo-nella-task-force/329788/?utm_source=dlvr.it&utm_medium=facebook"]
data[[1]][data[[1]]$expanded == "https://www.ilfaroonline.it/2020/04/01/federscherma-in-prima-linea-contro-il-covid-19-medici-federali-in-campo-nella-task-force/329788/?utm_source=dlvr.it&utm_medium=facebook"]
data[[1]][data[[1]]$expanded == "https://www.ilfaroonline.it/2020/04/01/federscherma-in-prima-linea-contro-il-covid-19-medici-federali-in-campo-nella-task-force/329788/?utm_source=dlvr.it&utm_medium=facebook",]
data[[1]][data[[1]]$expanded == url_shared,]
g
g2 <- g
nodes <- data.frame(id=V(g2())$name, label=V(g2())$account.name, group=V(g2())$component)
edges <- as.data.frame(as_edgelist(g2()))
edges$weight <- E(g2())$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes <- data.frame(id=V(g2)$name, label=V(g2$account.name, group=V(g2$component)
edges <- as.data.frame(as_edgelist(g2)
edges$weight <- E(g2$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes <- data.frame(id=V(g2)$name, label=V(g2$account.name, group=V(g2$component)
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, group=V(g2)$component)
edges <- as.data.frame(as_edgelist(g2))
edges$weight <- E(g2)$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name)
edges <- as.data.frame(as_edgelist(g2))
edges$weight <- E(g2)$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, selected=0)
edges <- as.data.frame(as_edgelist(g2))
edges$weight <- E(g2)$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes$selected[nodes$selected == data[[1]][data[[1]]$expanded == url_shared,]] <- 1
nodes$selected[nodes$selected == details[details$expanded == url_shared,]] <- 1
nodes$selected[nodes$name == details[details$expanded == url_shared,]] <- 1
nodes$selected[nodes$name == details[details$expanded == url_shared]] <- 1
data[[1]]$account.name[data[[1]]$expanded == url_shared,]
data[[1]]$account.name[data[[1]]$expanded == url_shared]
selected <- data[[1]]$account.name[data[[1]]$expanded == url_shared]
nodes$selected[nodes$name %in% selected]
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, selected=0)
nodes$selected[nodes$name %in% selected] <- 1
table(nodes$selected)
selected <- data[[1]]$account.name[data[[1]]$expanded == url_shared]
nodes$selected[nodes$name %in% selected] <- 1
table(nodes$selected)
View(nodes)
nodes$selected[nodes$label %in% selected] <- 1
table(nodes$selected)
selected
selected <- data[[1]]$account.name
visNetwork(nodes, edges) %>%
visNodes(
shape = "dot",
color = list(
background = "#0085AF",
border = "#013848",
highlight = "#FF8000"
) %>%
visIgraphLayout()
visNetwork(nodes, edges) %>%
visNodes(
shape = "dot",
color = list(
background = "#0085AF",
border = "#013848",
highlight = "#FF8000"
), %>%
visIgraphLayout()
visNetwork(nodes, edges) %>%
visIgraphLayout()
visNetwork(nodes, edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = selected)
visNetwork(nodes, edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = selected) %>%
visOptions(selectedBy = "selected")
visNetwork(nodes, edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = "selected")
nodes$group[nodes$label %in% selected] <- 1
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, group=0)
nodes$group[nodes$label %in% selected] <- 1
visNetwork(nodes, edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = "selected")
visNetwork(nodes, edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot")
runApp()
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, group=0)
nodes$group[nodes$label %in% selected] <- 1
edges <- as.data.frame(as_edgelist(g2))
edges$weight <- E(g2)$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, group=V(g2)$component)
nodes$group[nodes$label %in% selected] <- 1
edges <- as.data.frame(as_edgelist(g2))
edges$weight <- E(g2)$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes <- data.frame(id=V(g2)$name, label=V(g2)$account.name, group=V(g2)$component)
#nodes$group[nodes$label %in% selected] <- 1
edges <- as.data.frame(as_edgelist(g2))
edges$weight <- E(g2)$weight
colnames(edges) <- c("from", "to", "width")
visNetwork(nodes, edges) %>%
visIgraphLayout()
head(nodes)
typeof(nodes$group)
nodes$group <- 0
head(nodes)
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes$group[1:5]
nodes$group[1:5] <- 1
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes$group[nodes$label %in% selected] <- 1
visNetwork(nodes, edges) %>%
visIgraphLayout()
nodes$group <- 0
nodes$group[nodes$label %in% selected]
selected <- data[[1]]$account.name[data[[1]]$expanded == url_shared]
nodes$group[nodes$label %in% selected]
nodes$group[nodes$label %in% selected] <- 1
visNetwork(nodes, edges) %>%
visIgraphLayout()
visNetwork(nodes, edges) %>%
visIgraphLayout()
runApp()
runApp()
runApp()
runApp()
runApp()
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
runApp()
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
data <-  readRDS("data/output.rds")
g <- data[[2]]
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
runApp()
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
data <-  readRDS("data/output.rds")
g <- data[[2]]
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
min(net$time)
max(net$time)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
g
selected
selected <- data[[1]]$account.name[data[[1]]$expanded == input$news]
selected <- data[[1]]$account.name[data[[1]]$expanded][1:3]
selected
url_shared <- unique(data[[1]]$expanded)
selected <- data[[1]]$account.name[data[[1]]$expanded == url_shared]
selected <- data[[1]]$account.name[data[[1]]$expanded == url_shared[1]]
selected
g
V(g)$selected <- 0
g
vertex.attributes(g,V(g)[V(g)name %in% selected])
vertex.attributes(g,V(g)[V(g)$name %in% selected])
set.vertex.attribute(g,name = g,V(g)[V(g)$name %in% selected],value = 1)
set.vertex.attribute(g,name = V(g)[V(g)$name %in% selected],value = 1)
set.vertex.attribute(g,name = V(g)$name[V(g)$name %in% selected],value = 1)
V(g)[V(g)$name %in% selected]
selected <- data[[1]]$account.name[data[[1]]$expanded][1:30]
selected
selected <- data[[1]]$account.name[data[[1]]$expanded %in% selected]
selected
selected <- data[[1]]$account.name[data[[1]]$expanded == url_shared[1:10]]
selected
selected <- unique(data[[1]]$account.name[data[[1]]$expanded == url_shared[1:10]])
selected
V(g)$name[V(g)$name %in% selected]
V(g)[V(g)$name %in% selected]
g
V(g)$name[V(g)$account.name %in% selected]
set.vertex.attribute(graph = g,V(g)$name[V(g)$account.name %in% selected],value = 1)
table(V(g)$selected)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
url_shared <- unique(data[[1]]$expanded[data[[1]]$account.name %in% V(g)$account.name])
runApp()
head(data[[1]])
runApp()
runApp()
runApp()
url_shared <- unique(data[[1]]$expanded[data[[1]]$account.name %in% V(g)$account.name])
url_shared
url_shared[2]
shares <- data[[1]]
typeof(shares)
as.data.frame(shares)
shares <- as.data.frame(data[[1]])
url_shared <- unique(shares$expanded[shares$account.name %in% V(g)$account.name])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(data[[3]])
runApp()
head(shares)
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='coornet',token='B849BFFD8B8EDE76CD4F7097B37C3D36', secret='<SECRET>')
rsconnect::deployApp('../coord_net_dashboard/')
rsconnect::deployApp('../coord_net_dashboard/')
library(rsconnect)
rsconnect::setAccountInfo(name='coornet',token='B849BFFD8B8EDE76CD4F7097B37C3D36', secret='k4qkP7syx30HjA+GJkUMUdYelyo3WVv5raQ2JMT')
rsconnect::deployApp('../coord_net_dashboard/')
connect::deployApp('C:/Users/lucar/Documents/GitHub/coord_net_dashboard/')
library(rsconnect)
rsconnect::setAccountInfo(name='coornet',token='B849BFFD8B8EDE76CD4F7097B37C3D36', secret='k4qkP7syx30HjA+GJkUMUdYelyo3WVv5raQ2JMT')
rsconnect::deployApp('C:/Users/lucar/Documents/GitHub/coord_net_dashboard/')
rsconnect::setAccountInfo(name='coornet',token='B849BFFD8B8EDE76CD4F7097B37C3D36', secret='k4qkP7syx30HjA+GJkUMUdYelyo3WVv5raQ2JMT')
rsconnect::setAccountInfo(name='coornet',
token='98EF6CC1E0420600DE80CB60D543707B',
secret='Z37PVtbJ8DcBDfwrT/KdQdO1kI5nxLOV2n6V6pSK')
rsconnect::deployApp('C:/Users/lucar/Documents/GitHub/coord_net_dashboard/')
rsconnect::deployApp('../coord_net_dashboard/')
rsconnect::deployApp(appDir = '../coord_net_dashboard/')
setwd("C:/Users/lucar/Desktop")
rsconnect::deployApp(appDir = '../Documents/GitHub/coord_net_dashboard/')
setwd("~/GitHub")
rsconnect::deployApp(appDir = "coord_net_dashboard/")
rsconnect::deployApp(appDir = "coord_net_dashboard")
rsconnect::deployApp(appDir = "coord_net_dashboard")
runApp('coord_net_dashboard')
runApp('coord_net_dashboard')
rsconnect::deployApp(appDir = "coord_net_dashboard")
library(CooRnet)
get_top_coord_urls(data)
top_url <- get_top_coord_urls(data)
get_top_coord_shares(data)
View(top_url)
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
t <- net
t$time <- as.Date(t$time)
t <- t %>% dplyr::group_by(time) %>%
dplyr::summarize(GroupCount = n())
net
t
runApp('coord_net_dashboard/app_v2.R')
library(dplyr)
unlist(top_url,use.names = T)
t <- unlist(top_url,use.names = T)
rm(t)
View(top_url)
t <- unnest(data = top_url,cols = account.urls)
t
View(top_url)
top_url$account.urls <- strsplit(top_url$account.urls,",")
View(top_url)
top_url
t <- unnest(data = top_url,cols = account.urls)
t
View(t)
top_url
runApp('coord_net_dashboard/app_v2.R')
g
top_url
top_url$account.urls <- strsplit(top_url$account.urls,",")
top_url <- unnest(data = top_url,cols = account.urls)
strsplit(top_url$account.urls,",")
top_url <- get_top_coord_urls(data)
top_url
top_url$account.urls <- strsplit(top_url$account.urls,",")
top_url <- unnest(data = top_url,cols = account.urls)
top_url
top_url$account.urls <- trim(top_url$account.urls)
library(stringr)
top_url$account.urls <- trim(top_url$account.urls)
top_url$account.urls <- str_trim(top_url$account.urls)
top_url
library(shiny)
library(visNetwork)
library(igraph)
library(reshape2)
library(lubridate)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(DT)
library(stringr)
library(CooRnet)
#library(googledrive)
data <-  readRDS("data/dashboard_data.rds")
g <- data[[1]]
V(g)$color <- "gray"
top_url <- data[[2]]
top_url_tab <- top_url
top_url$cooR.account.name <- strsplit(top_url$cooR.account.name,",")
top_url <- unnest(data = top_url,cols = cooR.account.name)
top_url$cooR.account.name <- str_trim(top_url$cooR.account.name)
top_url$cooR.account.name <- gsub(pattern = "\"",replacement = "",x = top_url$cooR.account.name)
View(top_url)
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
t <- net
t$time <- as.Date(t$time)
t <- t %>% dplyr::group_by(time) %>%
dplyr::summarize(GroupCount = n())
head(top_url$cooR.account.name)
heas(as_tibble(top_url))
head(as_tibble(top_url))
head(as_tibble(top_url))$cooR.account.name
head(as_tibble(top_url),10)$cooR.account.name
head(top_url)
runApp()
g
E(g)$t_coord_share
nodes <- data.frame(id=V(g)$name,
label=V(g)$account.name,
color=V(g)$color,
component=V(g)$component,
title=paste0(V(g)$account.name, " - AVG. subscribers=", V(g2())$avg.account.subscriberCount, " - verified=",verified=V(g2())$account.verified))
nodes <- data.frame(id=V(g)$name,
label=V(g)$account.name,
color=V(g)$color,
component=V(g)$component,
title=paste0(V(g)$account.name, " - AVG. subscribers=", V(g)$avg.account.subscriberCount, " - verified=",verified=V(g)$account.verified))
nodes
head(nodes)
runApp()
runApp()
runApp()
unique(top_url$expanded)
runApp()
runApp()
selected <- top_url$cooR.account.name[3]
selected
runApp()
runApp()
View(net2)
net <- list(timestamp=E(g)$t_coord_share)
names(net) <- as.data.frame(as.character(E(g)))
net <- melt(net,)
net <- net[c(2,1)]
names(net) <- c("eid","time")
net$time <- as_datetime(net$time)
net
min(net$time)
max(net$time)
net2 <- subset(net, time >= min(net$time) & time <= max(net$time))
net2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp(appDir = "../coord_net_dashboard")
rsconnect::deployApp(appDir = "../coord_net_dashboard")
g
table(V(g)$account.verified)
V(g)$account.verified
runApp()
runApp()
runApp()
runApp()
runApp()
head(net)
head(net2)
runApp()
runApp()
runApp()
t <- net
t$time <- as.Date(t$time)
t <- t %>% dplyr::group_by(time) %>%
dplyr::summarize(GroupCount = n())
t
ggplot(t,mapping = (aes(x = time,y = GroupCount)))+geom_line()+theme_light())
t
ggplot(t,mapping = (aes(x = time,y = GroupCount)))
ggplot(t,mapping = (aes(x = time,y = GroupCount)))+scale_y_continuous(trans='log2')
ggplot(t,mapping = (aes(x = time,y = GroupCount)))+geom_line()+scale_y_continuous(trans='log2')
ggplot(t,mapping = (aes(x = time,y = GroupCount)))+geom_line()
ggplot(t2,mapping = (aes(x = time,y = GroupCount)))+geom_line()
t2 <- subset(net, time >= as.character(min(net$time)) & time <= as.character(max(net$time))
)
t2
ggplot(t2,mapping = (aes(x = time,y = GroupCount)))+geom_line()
runApp()
runApp()
runApp()
t2
t3$time <- as.Date(t$time)
t3 %>% dplyr::group_by(time) %>%
dplyr::summarize(GroupCount = n())
runApp()
t2
tmp <- t2$time <- as.Date(t2$time)
head(tmp)
t2$time <- as.Date(t2$time)
t2 %>% dplyr::group_by(time) %>%
dplyr::summarize(GroupCount = n())
runApp()
